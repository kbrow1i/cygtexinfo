--- origsrc/texinfo-6.3.91/info/t/Init-inter.inc	2016-12-08 15:25:46.000000000 -0500
+++ src/texinfo-6.3.91/info/t/Init-inter.inc	2017-05-20 17:56:40.069199600 -0400
@@ -102,8 +102,8 @@ run_ginfo ()
     exec 7>&- ;
     exec 8>$FINISHEDFIFO ;
     $GINFO $GINFO_OPTIONS "$@" ;
-    test $? -eq 0 || echo failure >$FINISHEDFIFO ;
-    echo finished >$FINISHEDFIFO ; } 0<>$PTS_DEVICE 1<&0 &
+    test $? -eq 0 || echo failure >&8 ;
+    echo finished >&8 ; } 0<>$PTS_DEVICE 1<&0 &
   SUBSHELL=$!
   exec 8<$FINISHEDFIFO
 
@@ -111,7 +111,7 @@ run_ginfo ()
   # to open it for writing, because if the above subshell exits before
   # we read from it, we won't be able to open it - even though 
   # "finished" is buffered.
-  exec 9>$FINISHEDFIFO
+  # exec 9>$FINISHEDFIFO
 
   # Check for pgrep
   if findprog pgrep; then
--- origsrc/texinfo-6.3.91/info/t/Timeout-test.inc	2015-07-13 17:45:42.000000000 -0400
+++ src/texinfo-6.3.91/info/t/Timeout-test.inc	2017-05-20 17:56:40.072201700 -0400
@@ -39,7 +39,7 @@ fi
 # "read -t 0" has an exit status of 1, not 2
 
 if test $status != 2; then
-  read -t 3 FINISHED <$FINISHEDFIFO
+  read -t 3 FINISHED <&8
   status=$?
 fi
 
--- origsrc/texinfo-6.3.91/info/t/adjust-anchors.sh	2015-06-05 11:47:04.000000000 -0400
+++ src/texinfo-6.3.91/info/t/adjust-anchors.sh	2017-05-20 17:56:40.074203500 -0400
@@ -27,8 +27,8 @@ run_ginfo -f anchors
 
 # Go to anchor in a UTF-8 encoded file when the current character encoding is
 # supposed to be ISO-8859-1
-printf 'ganchor-2\r\002\002\002\002\002\002' >$PTY_TYPE
-printf '\002\002\002\002\002\002\002\002\rDq' >$PTY_TYPE
+printf 'ganchor-2\r\002\002\002\002\002\002' >&7
+printf '\002\002\002\002\002\002\002\002\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/all-only.sh	2015-01-29 20:49:27.000000000 -0500
+++ src/texinfo-6.3.91/info/t/all-only.sh	2017-05-20 17:56:40.148479100 -0400
@@ -25,7 +25,7 @@ MANPATH=.; export MANPATH
 # to that file without loading a menu of matching files.  This relies
 # on there being no "intera" entry in "dir".
 run_ginfo --all intera
-printf 'Dq' >$PTY_TYPE
+printf 'Dq' >&7
 . $t/Timeout-test.inc
 
 grep '^File: intera.info,  Node: Top' $GINFO_OUTPUT
--- origsrc/texinfo-6.3.91/info/t/anchor-positions.sh	2015-01-29 20:49:46.000000000 -0500
+++ src/texinfo-6.3.91/info/t/anchor-positions.sh	2017-05-20 17:56:40.152483300 -0400
@@ -22,7 +22,7 @@ srcdir=${srcdir:-.}
 # encoding conversion doesn't cause the program to freeze.
 LANG=en_US.iso8859-1; export LANG
 run_ginfo -f anchor-positions
-printf q >$PTY_TYPE
+printf q >&7
 
 . $t/Timeout-test.inc
 cleanup
--- origsrc/texinfo-6.3.91/info/t/body-start.sh	2015-01-29 20:49:53.000000000 -0500
+++ src/texinfo-6.3.91/info/t/body-start.sh	2017-05-20 17:56:40.155485400 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f body-start
 # Check that node headers aren't included in searches
-printf 'sPotential match\r\rDq' >$PTY_TYPE &
+printf 'sPotential match\r\rDq' >&7 &
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/c-u-m-x-scroll-forward.sh	2016-01-13 07:32:36.000000000 -0500
+++ src/texinfo-6.3.91/info/t/c-u-m-x-scroll-forward.sh	2017-05-20 17:56:40.158488700 -0400
@@ -31,8 +31,8 @@ COLUMNS=80; export COLUMNS
 run_ginfo -f intera -n 'Scroll four lines'
 
 # C-u M-x scroll-forward should scroll four lines, not four screens
-printf '\025\033xscroll-forward\r' >$PTY_TYPE
-printf '\rDq' >$PTY_TYPE
+printf '\025\033xscroll-forward\r' >&7
+printf '\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/close-window-after-search.sh	2017-05-20 11:38:31.000000000 -0400
+++ src/texinfo-6.3.91/info/t/close-window-after-search.sh	2017-05-20 17:56:27.959545300 -0400
@@ -22,7 +22,7 @@ run_ginfo -f intera
 
 # Split window, do a search, and then close the window the search took
 # place in.
-printf '\0302sblah\r\0300q' >$PTY_TYPE
+printf '\0302sblah\r\0300q' >&7
 
 . $t/Timeout-test.inc
 cleanup
--- origsrc/texinfo-6.3.91/info/t/dir-entry-to-subdir.sh	2015-07-15 09:06:41.000000000 -0400
+++ src/texinfo-6.3.91/info/t/dir-entry-to-subdir.sh	2017-05-20 17:56:40.162492600 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 # Follow a dir entry to a file in a subdirectory of infodir
 run_ginfo subdir
-printf 'Dq' >$PTY_TYPE
+printf 'Dq' >&7
 . $t/Timeout-test.inc
 
 cat $GINFO_OUTPUT
--- origsrc/texinfo-6.3.91/info/t/dir-merge.sh	2016-09-06 20:43:16.000000000 -0400
+++ src/texinfo-6.3.91/info/t/dir-merge.sh	2017-05-20 17:56:40.166497100 -0400
@@ -23,7 +23,7 @@ INFOPATH=$INFOPATH:$t/infodir/subdir
 # Follow a reference to file in merged dir
 run_ginfo -v hide-note-references=On file-in-subdir
 
-printf q >$PTY_TYPE
+printf q >&7
 . $t/Timeout-test.inc
 
 cleanup
--- origsrc/texinfo-6.3.91/info/t/empty-infopath.sh	2015-05-17 05:07:17.000000000 -0400
+++ src/texinfo-6.3.91/info/t/empty-infopath.sh	2017-05-20 17:56:40.169498900 -0400
@@ -24,7 +24,7 @@ srcdir=${srcdir:-.}
 INFOPATH=
 export INFOPATH
 run_ginfo
-printf q >$PTY_TYPE
+printf q >&7
 . $t/Timeout-test.inc
 
 cleanup
--- origsrc/texinfo-6.3.91/info/t/end-of-line.sh	2015-01-29 20:51:15.000000000 -0500
+++ src/texinfo-6.3.91/info/t/end-of-line.sh	2017-05-20 17:56:40.173502800 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera
 # Check that typing C-e on an empty line doesn't go to previous line
-printf '\x0e\x0e\x0e\x0e\x0e\x05\x0e\rDq' >$PTY_TYPE
+printf '\x0e\x0e\x0e\x0e\x0e\x05\x0e\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/gc-split.sh	2016-01-13 07:33:11.000000000 -0500
+++ src/texinfo-6.3.91/info/t/gc-split.sh	2017-05-20 17:56:40.178508200 -0400
@@ -22,7 +22,7 @@ run_ginfo -f split
 # Cause the garbage collector to run in a split file by cancelling an 
 # incremental search.  Refresh the screen afterwards to increase the 
 # chances of trying to access freed file contents.
-printf '\023aa\033[B\014q' >$PTY_TYPE
+printf '\023aa\033[B\014q' >&7
 . $t/Timeout-test.inc
 
 cleanup
--- origsrc/texinfo-6.3.91/info/t/goal-column.sh	2015-01-29 20:51:53.000000000 -0500
+++ src/texinfo-6.3.91/info/t/goal-column.sh	2017-05-20 17:56:40.183512700 -0400
@@ -20,9 +20,9 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera -n 'Goal column'
 
-printf '/^Goal column test\r\016' >$PTY_TYPE
-printf '\005\016\016\006\006' >$PTY_TYPE
-printf '\rDq' >$PTY_TYPE
+printf '/^Goal column test\r\016' >&7
+printf '\005\016\016\006\006' >&7
+printf '\rDq' >&7
 . $t/Timeout-test.inc
 
 diff $GINFO_OUTPUT $t/node-target
--- origsrc/texinfo-6.3.91/info/t/goto-quoted.sh	2015-01-29 20:51:54.000000000 -0500
+++ src/texinfo-6.3.91/info/t/goto-quoted.sh	2017-05-20 17:56:40.206534600 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f quoting
 # Go to a node with colons and commas in its name with "g"
-printf 'g\tColo\t\r\t\rDq' >$PTY_TYPE
+printf 'g\tColo\t\r\t\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/inc-sea-forward-nonregex.sh	2016-01-13 07:31:57.000000000 -0500
+++ src/texinfo-6.3.91/info/t/inc-sea-forward-nonregex.sh	2017-05-20 17:56:40.210539700 -0400
@@ -24,8 +24,8 @@ run_ginfo -f search
 # search.  Test deleting characters from search string with backspace.  Go
 # forward to match in next node.  Test we end up at the end of the match
 # string by trying to wrap to the next line with C-f.
-printf 'R\023matchxy\010\010' >$PTY_TYPE
-printf '\023\023\023\r\006\rDq' >$PTY_TYPE
+printf 'R\023matchxy\010\010' >&7
+printf '\023\023\023\r\006\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/inc-sea-forward.sh	2016-01-13 07:32:54.000000000 -0500
+++ src/texinfo-6.3.91/info/t/inc-sea-forward.sh	2017-05-20 17:56:40.214543300 -0400
@@ -24,8 +24,8 @@ run_ginfo -f search
 # search string with backspace.  Go forward to match in next node.  Test
 # we end up at the end of the match string by trying to wrap to the next line
 # with C-f.
-printf '\023matchxy\010\010' >$PTY_TYPE
-printf '\023\023\023\r\006\rDq' >$PTY_TYPE
+printf '\023matchxy\010\010' >&7
+printf '\023\023\023\r\006\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/inc-sea-history.sh	2016-01-13 07:32:59.000000000 -0500
+++ src/texinfo-6.3.91/info/t/inc-sea-history.sh	2017-05-20 17:56:40.218546900 -0400
@@ -21,15 +21,15 @@ srcdir=${srcdir:-.}
 run_ginfo -f inc-sea-history
 
 # Check that we go back to the right node after an incremental search
-printf '\02301234\b4\b\b34\b\bqwerty\b\b\b\b\b\b34' >$PTY_TYPE
-printf '\rD' >$PTY_TYPE
+printf '\02301234\b4\b\b34\b\bqwerty\b\b\b\b\b\b34' >&7
+printf '\rD' >&7
 
 # Check we reached node with "01234" in it
 sleep 1
 grep 'Node: Four' $GINFO_OUTPUT
 RETVAL=$?
 
-printf 'lDq' >$PTY_TYPE
+printf 'lDq' >&7
 . $t/Timeout-test.inc
 
 if test $RETVAL = 0; then
--- origsrc/texinfo-6.3.91/info/t/inc-sea-insensitive.sh	2016-01-13 07:33:06.000000000 -0500
+++ src/texinfo-6.3.91/info/t/inc-sea-insensitive.sh	2017-05-20 17:56:40.221550200 -0400
@@ -23,8 +23,8 @@ run_ginfo -f intera -n 'Incremental sear
 # Search for "match" with incremental search, adding an upper-case character
 # to make the search case-sensitive.  Delete it and check the search goes back
 # to being case insensitive by checking that a "Match" is included.
-printf '\023matchX\010' >$PTY_TYPE
-printf '\023\023\r\rDq' >$PTY_TYPE
+printf '\023matchX\010' >&7
+printf '\023\023\r\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/index-apropos.sh	2015-09-30 09:20:23.000000000 -0400
+++ src/texinfo-6.3.91/info/t/index-apropos.sh	2017-05-20 17:56:40.225553800 -0400
@@ -24,7 +24,7 @@ run_ginfo
 # result. Then type "i" followed by <TAB> to check the indices in the
 # file are still there.
 
-printf '\033xindex-apropos\rlink\r\t\ri\txxxx\rqq' >$PTY_TYPE
+printf '\033xindex-apropos\rlink\r\t\ri\txxxx\rqq' >&7
 # We exited the "i" prompt with "xxx\r" instead of "\007" because
 # C-g leads typeahead to be discarded so it would not be reliable.
 
--- origsrc/texinfo-6.3.91/info/t/index-completing.sh	2015-01-29 20:52:07.000000000 -0500
+++ src/texinfo-6.3.91/info/t/index-completing.sh	2017-05-20 17:56:40.229557400 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f index-search
 # Check that pressing tab to complete works for index search
-printf 'i\t\rDq' >$PTY_TYPE
+printf 'i\t\rDq' >&7
 . $t/Timeout-test.inc
 
 grep '^Node: Node 2' $GINFO_OUTPUT
--- origsrc/texinfo-6.3.91/info/t/index-long-nodeline.sh	2015-01-29 20:52:09.000000000 -0500
+++ src/texinfo-6.3.91/info/t/index-long-nodeline.sh	2017-05-20 17:56:40.233568300 -0400
@@ -21,7 +21,8 @@ srcdir=${srcdir:-.}
 run_ginfo -f split
 # Follow an menu item from the index node to a node where physical lines
 # don't match logical lines.
-printf 'gIndex\r\t\t\r\rDq' >$PTY_TYPE
+printf 'gIndex\r\t\t\r\rDq' >&7
+
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/index-search.sh	2015-01-29 20:52:11.000000000 -0500
+++ src/texinfo-6.3.91/info/t/index-search.sh	2017-05-20 17:56:40.238566200 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 run_ginfo -f intera
 # Search in indices with 'virtual-index' command.  Go down to index
 # entry and select it.
-printf 'Ibc\r\016\016\016\016\016\016\016\016\016\rDq' >$PTY_TYPE
+printf 'Ibc\r\016\016\016\016\016\016\016\016\016\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/index.sh	2015-01-29 20:52:12.000000000 -0500
+++ src/texinfo-6.3.91/info/t/index.sh	2017-05-20 17:56:40.243571300 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera
 # Follow an index entry
-printf 'iabc\rDq' >$PTY_TYPE
+printf 'iabc\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/last-no-history.sh	2015-03-03 10:18:23.000000000 -0500
+++ src/texinfo-6.3.91/info/t/last-no-history.sh	2017-05-20 17:56:40.247574900 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 run_ginfo -f intera
 
 # Try to go back in history when there is no earlier node
-printf lq >$PTY_TYPE
+printf lq >&7
 . $t/Timeout-test.inc
 
 cleanup
--- origsrc/texinfo-6.3.91/info/t/last-node-not-top-level.sh	2015-01-29 20:52:15.000000000 -0500
+++ src/texinfo-6.3.91/info/t/last-node-not-top-level.sh	2017-05-20 17:56:40.251578800 -0400
@@ -21,7 +21,8 @@ srcdir=${srcdir:-.}
 run_ginfo -f last-node-not-top-level -v scroll-last-node=Top
 
 # Wrap round to top node when last node does not have Top as Up
-printf ']]]Dq' >$PTY_TYPE
+printf ']]]Dq' >&7
+
 . $t/Timeout-test.inc
 
 grep 'Node: Top' $GINFO_OUTPUT
--- origsrc/texinfo-6.3.91/info/t/menu-sequence.sh	2015-01-29 20:52:16.000000000 -0500
+++ src/texinfo-6.3.91/info/t/menu-sequence.sh	2017-05-20 17:56:40.255582700 -0400
@@ -20,7 +20,8 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera
 # M-x menu-sequence
-printf '\033xmenu-sequence\rfile-menu,first,no,nod\rDq' >$PTY_TYPE
+printf '\033xmenu-sequence\rfile-menu,first,no,nod\rDq' >&7
+
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/next-quoted.sh	2015-03-03 10:18:50.000000000 -0500
+++ src/texinfo-6.3.91/info/t/next-quoted.sh	2017-05-20 17:56:40.258586000 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f quoting
 # Go to a node with colons and commas in its name with "n"
-printf 'n\t\rDq' >$PTY_TYPE
+printf 'n\t\rDq' >&7
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/no-index.sh	2015-01-29 20:52:25.000000000 -0500
+++ src/texinfo-6.3.91/info/t/no-index.sh	2017-05-20 17:56:40.263591400 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f sample
 # Try to search in the indices when there aren't any
-printf 'ia\rq' >$PTY_TYPE
+printf 'ia\rq' >&7
 . $t/Timeout-test.inc
 
 cleanup
--- origsrc/texinfo-6.3.91/info/t/quoted-label-and-target.sh	2015-03-03 10:21:53.000000000 -0500
+++ src/texinfo-6.3.91/info/t/quoted-label-and-target.sh	2017-05-20 17:56:40.268595600 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 run_ginfo -f quoting
 
 # Follow a cross-reference with both the label and destination quoted.
-printf '\t\t\t\r\t\rDq' >$PTY_TYPE &
+printf '\t\t\t\r\t\rDq' >&7 &
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/quoted-label-as-target.sh	2015-03-03 10:17:19.000000000 -0500
+++ src/texinfo-6.3.91/info/t/quoted-label-as-target.sh	2017-05-20 17:56:40.271598000 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f quoting
 # Follow a cross-reference to a node with colons and commas in its name
-printf '\t\r\t\rDq' >$PTY_TYPE
+printf '\t\r\t\rDq' >&7
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/quoted-manual-in-label.sh	2015-07-23 06:54:53.000000000 -0400
+++ src/texinfo-6.3.91/info/t/quoted-manual-in-label.sh	2017-05-20 17:56:40.275602200 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f quoting
 # Follow a cross-reference with a manual and quoted nodename in the label.
-printf '\t\t\t\t\t\r\t\rDq' >$PTY_TYPE
+printf '\t\t\t\t\t\r\t\rDq' >&7
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/quoted-manual-in-target.sh	2015-07-23 06:56:59.000000000 -0400
+++ src/texinfo-6.3.91/info/t/quoted-manual-in-target.sh	2017-05-20 17:56:40.279607300 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 run_ginfo -f quoting
 # Follow a cross-reference with a manual and quoted nodename in the target,
 # after the colon.
-printf '\t\t\t\t\r\t\rDq' >$PTY_TYPE
+printf '\t\t\t\t\r\t\rDq' >&7
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/quoted-target.sh	2015-03-03 10:21:27.000000000 -0500
+++ src/texinfo-6.3.91/info/t/quoted-target.sh	2017-05-20 17:56:40.284611800 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f quoting
 # Follow a cross-reference to a node with colons and commas in its name
-printf '\t\t\r\t\r\Dq' >$PTY_TYPE
+printf '\t\t\r\t\r\Dq' >&7
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/relative-reference.sh	2016-01-30 07:02:32.000000000 -0500
+++ src/texinfo-6.3.91/info/t/relative-reference.sh	2017-05-20 17:56:40.288615400 -0400
@@ -22,8 +22,8 @@ srcdir=${srcdir:-.}
 # Close window (so destination file will be forgotten), and do it again with
 # the other window.
 run_ginfo -f file-menu
-printf '\0302\t\t\t\r' >$PTY_TYPE
-printf '\030o\0301\t\t\t\rq' >$PTY_TYPE
+printf '\0302\t\t\t\r' >&7
+printf '\030o\0301\t\t\t\rq' >&7
 
 . $t/Timeout-test.inc
 cleanup
--- origsrc/texinfo-6.3.91/info/t/replace-viewed.sh	2017-05-20 10:36:47.000000000 -0400
+++ src/texinfo-6.3.91/info/t/replace-viewed.sh	2017-05-20 17:56:40.291617500 -0400
@@ -32,7 +32,7 @@ if test $GINFO_PID = unknown ; then
   RETVAL=77 # skip test
   cleanup
 fi
-printf 'D' >$PTY_TYPE
+printf 'D' >&7
 while test ! -f $GINFO_OUTPUT ; do sleep 1 ; done
 cat $GINFO_OUTPUT
 
@@ -41,8 +41,8 @@ rm -f t/replace-viewed.info
 cp $t/infodir/sample.info t/replace-viewed.info
 
 # Do a search.  This triggers ginfo's internal garbage collection.
-printf '/what\r' >$PTY_TYPE
-printf q >$PTY_TYPE
+printf '/what\r' >&7
+printf q >&7
 
 rm -f t/replace-viewed.info
 . $t/Timeout-test.inc
--- origsrc/texinfo-6.3.91/info/t/resize-in-completions.sh	2015-06-06 10:11:40.000000000 -0400
+++ src/texinfo-6.3.91/info/t/resize-in-completions.sh	2017-05-20 17:56:40.295621400 -0400
@@ -22,16 +22,16 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f file-menu
 if test $GINFO_PID = unknown; then
-  printf 'q' >$PTY_TYPE
+  printf 'q' >&7
   echo 'test skipped - do not have PID of ginfo process' >&2
   RETVAL=77 # automake code for skipped test
 else
-  printf 'g\t' >$PTY_TYPE
+  printf 'g\t' >&7
   sleep 1 # Give ginfo time to process above keystrokes
   kill -s WINCH $GINFO_PID
   sleep 1 # Give ginfo time to process signal
   # C-g to exit completions, q to quit
-  printf '\007q' >$PTY_TYPE
+  printf '\007q' >&7
 fi
 
 . $t/Timeout-test.inc
--- origsrc/texinfo-6.3.91/info/t/search-after-tag.sh	2015-01-29 20:52:56.000000000 -0500
+++ src/texinfo-6.3.91/info/t/search-after-tag.sh	2017-05-20 17:56:40.298624100 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera -n Searching
 # Search for text in a node that appears after an Info tag
-printf '/match\r\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\rDq' >$PTY_TYPE
+printf '/match\r\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/search-empty.sh	2015-01-29 20:52:58.000000000 -0500
+++ src/texinfo-6.3.91/info/t/search-empty.sh	2017-05-20 17:56:40.302628600 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera
 # Search without specifying a search string, and check we don't crash.
-printf 's\rq' >$PTY_TYPE
+printf 's\rq' >&7
 
 . $t/Timeout-test.inc
 cleanup
--- origsrc/texinfo-6.3.91/info/t/search-skip-screen.sh	2015-01-29 20:52:59.000000000 -0500
+++ src/texinfo-6.3.91/info/t/search-skip-screen.sh	2017-05-20 17:56:40.306632200 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 run_ginfo -v search-skip-screen=Off -f search
 
 # Go back to previous match when search-skip-screen=On
-printf 'smatch\r}{Dq' >$PTY_TYPE
+printf 'smatch\r}{Dq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/search-split-after-index.sh	2016-09-06 20:43:16.000000000 -0400
+++ src/texinfo-6.3.91/info/t/search-split-after-index.sh	2017-05-20 17:56:40.310636700 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 # Search for text in a split file after loading an index entry from the
 # command-line.
 run_ginfo -f split 'Link to node'
-printf '/node\r}}}}}q' >$PTY_TYPE
+printf '/node\r}}}}}q' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/split-file-menu.sh	2015-01-29 20:53:06.000000000 -0500
+++ src/texinfo-6.3.91/info/t/split-file-menu.sh	2017-05-20 17:56:40.314641200 -0400
@@ -23,7 +23,7 @@ run_ginfo -f split 'Second'
 # Follow a menu entry in a split file to a node in a different subfile from
 # the one containing "Top".  Check that we arrived properly and remembered
 # that we are in a split file by going back to "Top" with "t".
-printf tDq >$PTY_TYPE
+printf tDq >&7
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/split-footnotes.sh	2015-09-30 09:24:12.000000000 -0400
+++ src/texinfo-6.3.91/info/t/split-footnotes.sh	2017-05-20 17:56:40.318644200 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera -n 'Node with footnotes' -v automatic-footnotes=On
 # Move to automatic footnotes window and split it.  Check we don't crash.
-printf '\030o\0302qqqq' >$PTY_TYPE
+printf '\030o\0302qqqq' >&7
 . $t/Timeout-test.inc
 
 cleanup
--- origsrc/texinfo-6.3.91/info/t/split-index.sh	2015-01-29 20:53:11.000000000 -0500
+++ src/texinfo-6.3.91/info/t/split-index.sh	2017-05-20 17:56:40.321647500 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 # Follow an index entry in a split file
 
 run_ginfo -f split
-printf 'ientry text\r\rDq' >$PTY_TYPE
+printf 'ientry text\r\rDq' >&7
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/star-note-non-whitespace.sh	2015-01-29 20:53:15.000000000 -0500
+++ src/texinfo-6.3.91/info/t/star-note-non-whitespace.sh	2017-05-20 17:56:40.327652900 -0400
@@ -22,7 +22,7 @@ run_ginfo -f intera -n 'Star note non-wh
 
 # Check that "*note" is not interpreted as a cross-reference marker if
 # it is followed by a non-whitespace character.
-printf '\t\rDq' >$PTY_TYPE
+printf '\t\rDq' >&7
 
 . $t/Timeout-test.inc
 
--- origsrc/texinfo-6.3.91/info/t/tab-argument.sh	2015-01-29 20:53:18.000000000 -0500
+++ src/texinfo-6.3.91/info/t/tab-argument.sh	2017-05-20 17:56:40.330655900 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera -n 'Argument to tab'
 # C-u 2 TAB to go to second link
-printf '\0252\t\rDq' >$PTY_TYPE
+printf '\0252\t\rDq' >&7
 . $t/Timeout-test.inc
 
 diff $GINFO_OUTPUT $t/node-target
--- origsrc/texinfo-6.3.91/info/t/tab-no-xref.sh	2015-02-21 05:00:16.000000000 -0500
+++ src/texinfo-6.3.91/info/t/tab-no-xref.sh	2017-05-20 17:56:40.334659200 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 run_ginfo -v scroll-last-node=Top -f no-xref.info
 # Check that pressing tab in a file with no cross-references or menus
 # doesn't cause an infinite loop
-printf '\tq' >$PTY_TYPE
+printf '\tq' >&7
 . $t/Timeout-test.inc
 
 cleanup
--- origsrc/texinfo-6.3.91/info/t/tab-skip-node.sh	2015-02-21 07:13:53.000000000 -0500
+++ src/texinfo-6.3.91/info/t/tab-skip-node.sh	2017-05-20 17:56:40.338664000 -0400
@@ -23,7 +23,7 @@ run_ginfo -f tab-skip-node
 # when pressing tab, and then going back in the window history, goes
 # back to the last node that was actually displayed, and not to the
 # skipped node.
-printf '\t\t\tlDq' >$PTY_TYPE
+printf '\t\t\tlDq' >&7
 . $t/Timeout-test.inc
 
 grep 'Node: Top' $GINFO_OUTPUT
--- origsrc/texinfo-6.3.91/info/t/tab.sh	2015-03-03 11:35:08.000000000 -0500
+++ src/texinfo-6.3.91/info/t/tab.sh	2017-05-20 17:56:40.342667000 -0400
@@ -20,7 +20,7 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f intera
 # Tab to first link and follow it
-printf '\t\rDq' >$PTY_TYPE
+printf '\t\rDq' >&7
 . $t/Timeout-test.inc
 
 if test ! -f $GINFO_OUTPUT; then
--- origsrc/texinfo-6.3.91/info/t/window-split-dir.sh	2015-07-14 08:42:33.000000000 -0400
+++ src/texinfo-6.3.91/info/t/window-split-dir.sh	2017-05-20 17:56:40.346670900 -0400
@@ -21,7 +21,7 @@ srcdir=${srcdir:-.}
 # Load dir node
 run_ginfo
 # Split it in two, go to the new window, and make it the only window.
-printf '\0302\030o\0301Dq' >$PTY_TYPE
+printf '\0302\030o\0301Dq' >&7
 . $t/Timeout-test.inc
 
 grep '^File: dir' $GINFO_OUTPUT
--- origsrc/texinfo-6.3.91/info/t/xref-across-lines.sh	2015-08-12 16:33:16.000000000 -0400
+++ src/texinfo-6.3.91/info/t/xref-across-lines.sh	2017-05-20 17:56:40.350675200 -0400
@@ -19,7 +19,7 @@ srcdir=${srcdir:-.}
 . $t/Init-inter.inc
 
 run_ginfo -f intera -n 'Xref target crosses lines'
-printf '\t\rDq' >$PTY_TYPE
+printf '\t\rDq' >&7
 . $t/Timeout-test.inc
 
 diff $GINFO_OUTPUT $t/node-target
--- origsrc/texinfo-6.3.91/info/t/xref-to-anchor.sh	2015-07-14 08:02:25.000000000 -0400
+++ src/texinfo-6.3.91/info/t/xref-to-anchor.sh	2017-05-20 17:56:40.354679700 -0400
@@ -20,10 +20,10 @@ srcdir=${srcdir:-.}
 
 run_ginfo -f xref_to_anchor
 # Follow cross-reference to an anchor
-printf '\t\r' >$PTY_TYPE
+printf '\t\r' >&7
 
 # Follow the cross-reference on the line after the anchor
-printf '\6\6\rDq' >$PTY_TYPE
+printf '\6\6\rDq' >&7
 
 . $t/Timeout-test.inc
 
